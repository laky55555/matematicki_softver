{"kernelspec":{"display_name":"Anaconda (Python 3)","language":"python","name":"anaconda3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.1"}}
{"cell_type":"markdown","metadata":{},"source":"## Prvi kolokvij"}
{"cell_type":"code","execution_count":1,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"#nije nužno da ovako učitate potrebne pakete,\n#ali na ovaj način možete biti sigurni da se oni neće međusobno \"gaziti\"\nimport numpy as np\nimport scipy as sp\nimport matplotlib.pyplot as plt\nimport sympy as sy"}
{"cell_type":"code","execution_count":2,"metadata":{"collapsed":true,"trusted":true},"outputs":[],"source":"#ako neki zadatak traži interaktivnost pokrenite ovu ćeliju\nfrom IPython.display import display\nfrom ipywidgets import interact, fixed\nimport ipywidgets as widgets"}
{"cell_type":"markdown","metadata":{},"source":"Prvi zadatak"}
{"cell_type":"code","execution_count":28,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"[13, 6, 4]"},"execution_count":28,"metadata":{},"output_type":"execute_result"}],"source":"import random\ndef funkcija(lista, n):\n    return random.sample(lista, n)\n\nl = range(0, 15)\nfunkcija(l, 3)"}
{"cell_type":"markdown","metadata":{},"source":"Drugi zadatak"}
{"cell_type":"code","execution_count":40,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"True"},"execution_count":40,"metadata":{},"output_type":"execute_result"}],"source":"A = np.random.randn(5,5)\nB = np.linalg.inv(np.linalg.inv(A))\nnp.allclose(A,B)"}
{"cell_type":"markdown","metadata":{},"source":"Treci zadatak"}
{"cell_type":"code","execution_count":61,"metadata":{"collapsed":false,"trusted":true},"outputs":[],"source":"import scipy.sparse as ss\nimport scipy.sparse.linalg as ssl\nA = ss.rand(100,100)\nb = np.random.rand(100,1)\nx = ssl.gmres(A, b)"}
{"cell_type":"markdown","metadata":{},"source":"Cetvrti zadatak"}
{"cell_type":"code","execution_count":147,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"image/png":"smc-blob::6e94fe8c-a512-4345-a683-e981b1ef13d1","text/plain":"<matplotlib.figure.Figure at 0x7f7fa19330f0>"},"metadata":{},"output_type":"display_data"}],"source":"def f(x):\n    return np.cos(x)\n    \nx = np.linspace(-2*np.pi,2*np.pi,10000)\ny = f(x)\n\nfig, ax = plt.subplots()\nax.plot(x, y)\nax.spines['right'].set_color('none')\nax.spines['top'].set_color('none')\nax.xaxis.set_ticks_position('bottom')\nax.spines['bottom'].set_position(('data',0)) \nax.yaxis.set_ticks_position('left')\nax.spines['left'].set_position(('data',0))   \nax.fill_between(x, y, 1/2, color=\"green\", alpha=1);\nax.fill_between(x, 1/2, -1, color=\"white\", alpha=1);\n#ax.fill_between(f(x)==1/2, x, color=\"white\", alpha=1);\n\n"}
{"cell_type":"markdown","metadata":{},"source":"Peti zadatak"}
{"cell_type":"code","execution_count":97,"metadata":{"collapsed":false,"trusted":true},"outputs":[{"data":{"text/plain":"True"},"execution_count":97,"metadata":{},"output_type":"execute_result"}],"source":"n = sy.Symbol('n')\nk= sy.Symbol('k')\nd = sy.binomial(n, k)\nl = sy.binomial(n-1, k-1) + sy.binomial(n-1, k)\n\nl = sy.combsimp(l)\n\nl == d"}